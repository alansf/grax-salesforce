<apex:page controller="GRAXRestoreCtrl" cache="false" showChat="false" showHeader="false" standardStylesheets="true" sidebar="true" applyHtmlTag="false" applyBodyTag="false" docType="html-5.0">
    <apex:outputPanel rendered="{!!isMasterRestore}">
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" type="text/javascript"></script>
        <script src="{!URLFOR($Resource.grax, '/jquery.slds.js')}"></script>
        <script src="{!URLFOR($Resource.grax, '/jquery.sldsTree.js')}"></script>
        <script>
            window.setCookie = function(cname, cvalue, exdays) {
                var d = new Date();
                d.setTime(d.getTime() + (exdays*24*60*60*1000));
                var expires = "expires="+ d.toUTCString();
                document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
            };

            window.getCookie = function(cname) {
                var name = cname + "=";
                var decodedCookie = decodeURIComponent(document.cookie);
                var ca = decodedCookie.split(';');
                for(var i = 0; i <ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) == ' ') {
                        c = c.substring(1);
                    }
                    if (c.indexOf(name) == 0) {
                        return c.substring(name.length, c.length);
                    }
                }
                return "";
            };
        </script>
        <!-- Import the Design System style sheet -->
        <apex:slds />
    </apex:outputPanel>

    <style>
        .assistiveText {
            display: none;
        }

        [data-load="true"][data-loading="true"] {
            opacity: 0.5;
            pointer-events: none;
        }
        [data-load="true"] + [role="status"] {
            display: none;
        }
        [data-load="true"][data-loading="true"] + [role="status"] {
            display: block;
        }

        #fieldListSelector.slds-scrollable_y {
            max-height: 13.15rem;
            max-height: 31.5vh;
        }

        #fieldListSelector .slds-checkbox__label {
            display: inline-block;
            width: 100%;
        }

        #datePicker {
            z-index: 99999;
            top: 2.9rem!important;
            left: 0!important;
        }

        .dateFormat {
            display: none;
        }

        .noPointerEvents {
            pointer-events: none;
        }

        .slds-scope .slds-input-has-icon a.slds-input__icon {
            pointer-events: all;
        }

        .relatedIframeContent {
            display: flex;
            flex-direction: column;
            height: 100%;
        }
    </style>

    <script>
        var selectedObject;
    </script>

    <div class="{!IF(isMasterRestore, 'slds-tabs_scoped__content', 'slds-scope')}" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <apex:form id="form-restore">
            <apex:actionFunction action="{!changeObjToQuery}" name="changeObjToQuery" immediate="true" reRender="fieldListOutput">
                <apex:param name="objToQueryValue" value="" />
            </apex:actionFunction>

            <apex:actionFunction action="{!updateDataTable}" name="updateDataTable" immediate="true" reRender="datatableOuput" oncomplete="showDataTable();">
                <apex:param name="selectedFields" value="" />
                <apex:param name="filterSearchTerm" value="" />
            </apex:actionFunction>

            <apex:actionFunction action="{!changeSObjectToRestore}" name="changeSObjectToRestore" immediate="true" reRender="restoreOutput" oncomplete="showRestoreModal(true);showGlobalSpinner(false);">
                <apex:param name="soToRestore" value="" />
                <apex:param name="isReadOnlyMode" value="false" />
            </apex:actionFunction>

            <apex:actionFunction action="{!saveSObjectToRestore}" name="saveSObjectToRestore" immediate="true" reRender="restoreOutput" oncomplete="showRestoreModal(false);showGlobalSpinner(false);renderSvgIcons();"></apex:actionFunction>

            <apex:actionFunction action="{!changeIdToGetRelated}" name="changeIdToGetRelated" immediate="true" reRender="outputRelatedIframe" oncomplete="showRelatedModal(true);showGlobalSpinner(false);">
                <apex:param name="idToGetRelated" value="" />
            </apex:actionFunction>

            <div class="{!IF(isRelatedRestore, 'slds-p-horizontal_medium', '')}" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                <div id="tab-restore_restore">       
                    <div class="slds-section slds-is-open">
                        <h3 class="slds-section__title slds-theme_shade">
                            <span class="slds-truncate slds-p-horizontal_small" title="Select SalesForce object">Select SalesForce object</span>
                        </h3>
                        <div aria-hidden="false" class="slds-section__content">
                            <div class="slds-grid slds-grid_vertical-align-center">
                                <div class="slds-col slds-grow-none slds-m-right_small">
                                    <div class="slds-form-element">
                                        <div class="slds-form-element__control">
                                            <apex:outputPanel layout="block" styleClass="slds-select_container" rendered="{!isMasterRestore}">
                                                <apex:selectList id="objectList" value="{!objToQuery}" multiselect="false" size="1" styleClass="slds-select objectList">
                                                    <apex:selectOptions value="{!items}"/>
                                                </apex:selectList>
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="block" styleClass="slds-select_container" rendered="{!!isMasterRestore}">
                                                <select id="objectList" class="slds-select objectList" disabled="disabled">
                                                    <option value="" disabled="disabled" selected="selected">-- SELECT SALESFORCE OBJECT --</option>
                                                </select>
                                            </apex:outputPanel>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="slds-section slds-is-open slds-p-top_large">
                        <h3 class="slds-section__title slds-theme_shade">
                            <span class="slds-truncate slds-p-horizontal_small" title="Select Object Fields">Select Object Fields</span>
                        </h3>
                        <div aria-hidden="false" class="slds-section__content slds-is-relative">
                            <input type="hidden" id="fieldlist" />
                            <div id="fieldListSelector" data-load="true"></div>
                            <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
                                <span class="slds-assistive-text">Loading Fields...</span>
                                <div class="slds-spinner__dot-a"></div>
                                <div class="slds-spinner__dot-b"></div>
                            </div>
                        </div>
                    </div>

                    <apex:outputPanel styleClass="slds-section slds-is-open slds-p-top_large" layout="block" rendered="{!isMasterRestore}">
                        <h3 class="slds-section__title slds-theme_shade">
                            <span class="slds-truncate slds-p-horizontal_small" title="Filter Records">Filter Records</span>
                        </h3>
                        <div aria-hidden="false" class="slds-section__content slds-is-relative">
                            <div class="slds-grid slds-grid_vertical-align-center">
                                <div class="slds-col slds-m-right_small">
                                    <div class="slds-form-element">
                                        <label class="slds-form-element__label" for="filter-search-term">Search Term</label>
                                        <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left">
                                            <i data-icon="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#search')}" class="slds-icon slds-input__icon slds-input__icon_left slds-icon-text-default"></i>
                                            <input id="filter-search-term" class="slds-input" placeholder="Search" type="text" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>

                    <div class="slds-section slds-is-open slds-p-top_large">
                        <h3 class="slds-section__title slds-theme_shade">
                            <span class="slds-truncate slds-p-horizontal_small" title="GRAX Stored Records">GRAX Stored Records</span>
                        </h3>
                        <div aria-hidden="false" class="slds-section__content slds-is-relative">
                            <div class="slds-clearfix slds-p-bottom_medium">
                                <div class="slds-clearfix">
                                    <div class="slds-float_left">
                                        <button id="retriveGRAXFields" class="slds-button slds-button_brand">Retrieve</button>
                                    </div>
                                </div>
                            </div>

                            <div id="sObjectDataTableContainer" data-load="true">
                                <apex:outputPanel id="datatableOuput" layout="block">
                                    <apex:dataTable value="{!sObjectMap}" var="sid" id="sObjectDataTable" styleClass="slds-table slds-table_bordered slds-table_cell-buffer" rendered="{!!isTableRecordsEmpty}">
                                        <apex:repeat var="n" value="{!selectedFieldsList}">
                                            <apex:column headerValue="{!fieldMap[n].label}" rendered="{!fieldMap[n].isCreateable}">
                                                <apex:outputField value="{!sObjectMap[sid][fieldMap[n].name]}" />
                                            </apex:column>
                                            <apex:column headerValue="{!fieldMap[n].label}" rendered="{!!fieldMap[n].isCreateable}">
                                                <apex:outputText value="{!objectMap[sid][fieldMap[n].name]}" />
                                            </apex:column>
                                        </apex:repeat>
                    
                                        <apex:column >
                                            <apex:facet name="header">
                                                <span class="slds-assistive-text">Actions</span>
                                            </apex:facet>
                                            <apex:outputPanel >
                                                <div class="slds-dropdown-trigger slds-dropdown-trigger_click">
                                                    <apex:commandLink styleClass="slds-button slds-button_icon" onclick="preview('{!sid}');return false;" title="Preview">
                                                        <i data-icon="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#preview')}" class="slds-button__icon"></i>
                                                        <span class="slds-assistive-text">Preview</span>
                                                    </apex:commandLink>

                                                    <apex:commandLink styleClass="slds-button slds-button_icon" onclick="restore('{!sid}');return false;" title="Restore">
                                                        <i data-icon="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#undo')}" class="slds-button__icon"></i>
                                                        <span class="slds-assistive-text">Restore</span>
                                                    </apex:commandLink>

                                                    <apex:commandLink styleClass="slds-button slds-button_icon" onclick="related('{!sid}');return false;" title="Related" rendered="{!isMasterRestore}">
                                                        <i data-icon="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#hierarchy')}" class="slds-button__icon"></i>
                                                        <span class="slds-assistive-text">Related</span>
                                                    </apex:commandLink>
                                                </div>
                                            </apex:outputPanel>
                                        </apex:column>
                                    </apex:dataTable>

                                    <apex:outputPanel layout="block" rendered="{!isTableRecordsEmpty && !!isFieldSelected}" styleClass="slds-text-align_center">
                                        No records were found in GRAX
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </div>

                            <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
                                <span class="slds-assistive-text">Loading GRAX Fields...</span>
                                <div class="slds-spinner__dot-a"></div>
                                <div class="slds-spinner__dot-b"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <section id="restoreModal" role="dialog" tabindex="-1" aria-labelledby="modal-restore" aria-modal="true" aria-describedby="modal-content-restore" class="slds-modal slds-modal_medium slds-hide">
                <div class="slds-modal__container" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" data-toggle="modal" data-target="#restoreModal">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                        <h2 id="modal-restore" class="slds-text-heading_medium slds-hyphenate">Restore</h2>
                    </header>
                    
                    <div class="slds-modal__content slds-p-horizontal_medium" id="modal-content-restore">
                        <apex:outputPanel id="restoreOutput" layout="block" styleClass="slds-m-bottom_large restoreOutput">
                            <apex:outputPanel layout="block" styleClass="slds-m-vertical_small pageMessages">
                                <apex:pageMessages></apex:pageMessages>
                            </apex:outputPanel>

                            <apex:repeat var="f" value="{!sObjectFields}" rendered="{!sobjectToRestore != null}">
                                <apex:outputPanel layout="block" styleClass="slds-form-element slds-m-bottom_xx-small" rendered="{!f.isCreateable && f.isEditable}">
                                    <apex:outputLabel styleClass="slds-form-element__label" for="inputField" value="{!f.label}"/>
                                    <div class="slds-form-element__control">
                                        <apex:outputField id="outputField" value="{!sobjectToRestore[f.name]}" styleClass="{!f.styleClass}" rendered="{!isReadOnlyMode}" />
                                        <apex:outputPanel layout="block" styleClass="{!f.containerClass}" rendered="{!!isReadOnlyMode}">
                                            <apex:inputField id="inputField" value="{!sobjectToRestore[f.name]}" styleClass="{!f.styleClass}" />
                                            <apex:outputLabel styleClass="slds-checkbox__label" for="inputField" rendered="{!f.type == 'BOOLEAN'}">
                                                <span class="slds-checkbox_faux"></span>
                                            </apex:outputLabel>
                                        </apex:outputPanel>
                                    </div>
                                </apex:outputPanel>
                            </apex:repeat>
                        </apex:outputPanel>
                    </div>
    
                    <footer class="slds-modal__footer">
                        <div class="slds-form-element slds-float_left restore_attachments" data-restore-only="true">
                            <label class="slds-checkbox_toggle slds-grid">
                                <span class="slds-form-element__label slds-m-bottom_none">Restore Attachments?</span>
                                    <apex:inputCheckbox id="restore_attachment"/>
                                    <span class="slds-checkbox_faux_container" aria-live="assertive">
                                    <span class="slds-checkbox_faux"></span>
                                    <span class="slds-checkbox_on">Yes</span>
                                    <span class="slds-checkbox_off">No</span>
                                </span>
                            </label>
                        </div>

                        <button id="saveRestore" class="slds-button slds-button_brand" data-restore-only="true">Save</button>
                        <button id="cancelRestore" class="slds-button slds-button_neutral" data-toggle="modal" data-target="#restoreModal" data-restore-only="true">Cancel</button>
                        <button id="closeRestore" class="slds-button slds-button_neutral" data-toggle="modal" data-target="#restoreModal" data-preview-only="true">Close</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop slds-hide"></div>

            <section id="relatedModal" role="dialog" tabindex="-1" aria-labelledby="modal-related" aria-modal="true" aria-describedby="modal-content-related" class="slds-modal slds-modal_medium slds-hide">
                <div class="slds-modal__container" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" data-toggle="modal" data-target="#relatedModal">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                        <h2 id="modal-related" class="slds-text-heading_medium slds-hyphenate">Related</h2>
                    </header>
                    
                    <div class="slds-modal__content" id="modal-content-related">
                        <apex:outputPanel id="outputRelatedIframe" layout="block" styleClass="relatedIframeContent">
                            <apex:iframe id="relatedIframe" src="{!relatedIframeUrl}" scrolling="true" />
                        </apex:outputPanel>
                    </div>
    
                    <footer class="slds-modal__footer">
                        <button id="closeRelated" class="slds-button slds-button_neutral" data-toggle="modal" data-target="#relatedModal">Close</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop slds-hide"></div>

            <section id="relatedRestoreModal" role="dialog" tabindex="-1" aria-labelledby="modal-relatedRestore" aria-modal="true" aria-describedby="modal-content-relatedRestore" class="slds-modal slds-modal_medium slds-hide">
                <div class="slds-modal__container" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" data-toggle="modal" data-target="#relatedRestoreModal">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                        <h2 id="modal-relatedRestore" class="slds-text-heading_medium slds-hyphenate">Restore</h2>
                    </header>
                    
                    <div class="slds-modal__content slds-p-horizontal_medium" id="modal-content-relatedRestore">
                        <div class="restoreOutput"></div>
                    </div>
    
                    <footer class="slds-modal__footer">
                        <div class="restore_attachments" data-restore-only="true"></div>

                        <button id="saveRelatedRestore" class="slds-button slds-button_brand" data-restore-only="true">Save</button>
                        <button id="closeRelatedRestore" class="slds-button slds-button_neutral" data-toggle="modal" data-target="#relatedRestoreModal">Close</button>
                    </footer>
                </div>
            </section>
            <div class="slds-backdrop slds-hide"></div>

            <apex:outputPanel rendered="{!!isMasterRestore}" layout="block">
                <div id="globalSpinner" class="slds-spinner_container slds-is-fixed slds-hide">
                    <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
                        <span class="slds-assistive-text">Loading</span>
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
            </apex:outputPanel>

            <script>
                $(function() {
                    var isRelatedRestore = {!isRelatedRestore};

                    var $objectList = $('.objectList');
                    var $fieldlist = $('#fieldlist');
                    var $sObjectDataTableContainer = $('#sObjectDataTableContainer');
                    window.$restoreModal = $('#restoreModal');
                    var $relatedModal = $('#relatedModal');
                    window.$relatedRestoreModal = $('#relatedRestoreModal');
                    var $saveRestore = $('#saveRestore');
                    var $saveRelatedRestore = $('#saveRelatedRestore');
                    var $fieldListSelector = $('#fieldListSelector');
                    var $filterSearchTerm = $('#filter-search-term');
                    var $retriveGRAXFields = $('#retriveGRAXFields');
                    var $globalSpinner = window.$globalSpinner || $('#globalSpinner');

                    window.showGlobalSpinner = window.showGlobalSpinner || function(state) {
                        $globalSpinner.toggleClass('slds-hide', !state);
                        
                        if(isRelatedRestore && !state) {
                            parent.showGlobalSpinner(state);
                        }
                    };

                    window.addObjectListOptions = function(options) {
                        options.sort(function (a, b) {
                            if (a.label > b.label) {
                                return 1;
                            }
        
                            if (a.label < b.label) {
                                return -1;
                            }
                            
                            return 0;
                        });
        
                        $.each(options, function(i, item) {
                            var $option = $('<option>')
                                            .attr('value', item.index)
                                            .text(item.label + ' (' + item.relation + ')');
                            $objectList.append($option).prop('disabled', false);
                        });
                    };

                    $objectList.on('change', function(e) {
                        selectedObject = e.target.value;
                        changeObjToQuery(selectedObject);

                        $fieldListSelector.attr({'data-loading': true});
                    });

                    $retriveGRAXFields.on('click', function(e) {
                        var selectedFields = $fieldlist.val();

                        if(selectedFields) {
                            $sObjectDataTableContainer.attr({'data-loading': true});
                            updateDataTable(selectedFields, $filterSearchTerm.val());
                        } else {
                            alert('No fields selected.');
                        }
        
                        e.preventDefault();
                    });

                    window.showDataTable = function() {
                        $sObjectDataTableContainer.attr({'data-loading': false});
                        renderSvgIcons();
                    };

                    window.setReadOnlyMode = function(state) {
                        var $restoreOnly = $('[data-restore-only="true"]');
                        var $previewOnly = $('[data-preview-only="true"]');
                        
                        if(state) {
                            $restoreOnly.addClass('slds-hide');
                            $previewOnly.removeClass('slds-hide');
                        } else {
                            $restoreOnly.removeClass('slds-hide');
                            $previewOnly.addClass('slds-hide');
                        }

                        if(isRelatedRestore) {
                            parent.setReadOnlyMode(state);
                        }
                    };

                    window.restore = function(sid) {
                        showGlobalSpinner(true);
                        setReadOnlyMode(false);
                        changeSObjectToRestore(sid);
                    };

                    window.preview = function(sid) {
                        showGlobalSpinner(true);
                        setReadOnlyMode(true);
                        changeSObjectToRestore(sid, true);
                    };

                    window.related = function(sid) {
                        showGlobalSpinner(true);
                        changeIdToGetRelated(sid);
                    };
        
                    $saveRestore.on('click', function(e) {
                        showGlobalSpinner(true);
                        saveSObjectToRestore();
        
                        e.preventDefault();
                    });

                    $saveRelatedRestore.on('click', function(e) {
                        showGlobalSpinner(true);

                        var relatedIframe = $relatedModal.find('iframe').get(0);

                        var $restoreForm = relatedIframe.contentWindow.$restoreModal.find('.restoreOutput, .restore_attachments').find('input, select');
                        var $relatedForm = $relatedRestoreModal.find('.restoreOutput, .restore_attachments').find('input, select');

                        $relatedForm.each(function(i) {
                            var $old = $restoreForm.eq(i);
                            var $new = $(this);

                            if($old.val() != $new.val()) {
                               $old.val($new.val()).trigger('focus focusin keydown keyup input focusout change');
                            }
                        });

                        relatedIframe.contentWindow.saveSObjectToRestore();

                        e.preventDefault();
                    });
        
                    window.showRestoreModal = function(state) {
                        if(!state) {
                            state = $restoreModal.find('.pageMessages').text().trim() != '';
                        }
        
                        if(state) {
                            var $lookupInputs = $restoreModal.find('span.lookupInput');
                            if ($lookupInputs.length > 0) {
                                $lookupInputs.addClass('slds-is-relative');
        
                                var $i = $('<i>').attr({
                                    'data-icon': "{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#search')}",
                                    'class': 'slds-icon slds-icon-text-default slds-icon_xx-small'
                                });
        
                                $lookupInputs.find('a').attr('class', 'slds-button slds-button_icon slds-input__icon slds-input__icon_right');
                                $lookupInputs.find('img.lookupIcon').replaceWith($i);
                                renderSvgIcons();
                            }
        
                            var $namePointings = $restoreModal.find('div.is-name-pointing');
                            if ($namePointings.length > 0) {
                                $namePointings.addClass('slds-grid slds-wrap');
        
                                $namePointings.find('select')
                                    .addClass('slds-select')
                                    .wrap('<div class="slds-select_container slds-col slds-size_1-of-4"></div>');
        
                                $namePointings.find('span.lookupInput')
                                    .addClass('slds-col slds-size_3-of-4 slds-p-left_small')
                                    .find('input')
                                        .addClass('slds-input');
                            }
        
                            $restoreModal.find('.slds-form-element').each(function() {
                                var $this = $(this);
                                var $errorMsgs = $this.find('.errorMsg');
                                
                                if($errorMsgs.length > 0) {
                                    $errorMsgs.addClass('slds-form-element__help');
                                    $this.addClass('slds-has-error');
                                }
                            });


                            var $dateInputs = $restoreModal.find('span.dateInput');
                            if ($dateInputs.length > 0) {
                                $dateInputs.addClass('slds-is-relative');

                                var $button = $('<button>').attr('class', 'slds-button slds-button_icon slds-input__icon slds-input__icon_right noPointerEvents');
                                var $i = $('<i>').attr({
                                    'data-icon': "{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#event')}",
                                    'class': 'slds-icon slds-icon-text-default slds-icon_xx-small'
                                });
                                $button.append($i);
                                
                                $button.on('click', function(e) {
                                    $(this).prev('input').focus();

                                    e.preventDefault();
                                });

                                $dateInputs.find('input')
                                    .wrap('<div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"></div>')
                                    .after($button);

                                $dateInputs.on('focus', 'input', function(e) {
                                    $('#datePicker').insertAfter($(this).parent());

                                    e.preventDefault();
                                });

                                renderSvgIcons();
                            }
                            
                            $globalSpinner.addClass('slds-hide');
                        }
        
                        if(!isRelatedRestore) {
                            $restoreModal.trigger('modaltoggle', [state]);
                        } else {
                            parent.showRelatedModal([state]);
                            parent.$relatedRestoreModal.trigger('modaltoggle', [state]);

                            if(state) {
                                parent.$relatedRestoreModal.find('.restoreOutput').replaceWith(
                                    $restoreModal.find('.restoreOutput').clone());

                                parent.$relatedRestoreModal.find('.restore_attachments').replaceWith(
                                    $restoreModal.find('.restore_attachments').clone());
                            }
                            
                            $('#datePicker').appendTo($('body', parent.document));
                        }

                    };

                    $restoreModal.on('modaltoggle', function(e, state) {
                        if(!state) $('#datePicker').appendTo('body');
                    });

                    $relatedRestoreModal.on('modaltoggle', function(e, state) {
                        showRelatedModal(!state);
                    });

                    window.showRelatedModal = function(state) {
                        $relatedModal.trigger('modaltoggle', [state]);
                    };

                    window.renderFieldListSelector = function(data) {
                        data.sort(function (a, b) {
                            if (a.label > b.label) {
                                return 1;
                            }
        
                            if (a.label < b.label) {
                                return -1;
                            }
                            
                            return 0;
                        });

                        $fieldListSelector.sldsTree({ 
                            data: data,
                            attrs: {
                                root: {'class': 'slds-scrollable_y'}
                            },
                            onDiv: function($div, item, settings) {
                                $div.append('<div class="slds-size_1-of-1">\
                                <div class="slds-form-element">\
                                    <div class="slds-form-element__control">\
                                        <span class="slds-checkbox">\
                                        <input name="field_' + item[settings.items.id] + '" id="field_' + item[settings.items.id] + '" type="checkbox" ' + (item.isSelected ? 'checked' : '') + ' />\
                                        <label class="slds-checkbox__label" for="field_' + item[settings.items.id] + '">\
                                            <span class="slds-checkbox_faux"></span>\
                                            <span class="slds-form-element__label">' + item[settings.items.label] + '</span>\
                                        </label>\
                                        </span>\
                                    </div>\
                                    </div>\
                                </div>');
                            },
                            onFinish: function($root, items, settings) {
                                var fields = {};
                                var countChecked = 1;

                                var getSelectedFields = function() {
                                    var selectedFields = [];

                                    $.each(fields, function(field, selected) {
                                        if(selected) {
                                            selectedFields.push(field);
                                        }
                                    });

                                    return selectedFields;
                                };

                                var cookieSelected = window.getCookie(selectedObject + 'Fields');

                                var updateValue = function() {
                                    var selectedFields = getSelectedFields().join(',');

                                    $fieldlist.val(selectedFields);
                                    window.setCookie(selectedObject + 'Fields', selectedFields);
                                };

                                $.each(items, function(i, item) {
                                    var id = item[settings.items.id];

                                    if(cookieSelected) {
                                        fields[id] = cookieSelected.split(',').indexOf(id) != -1;
                                    } else {
                                        fields[id] = item.isSelected;
                                    }

                                    $('#field_' + id).on('change', function(e) {
                                        if(e.target.checked && countChecked >= 7) {
                                            e.target.checked = false;
                                            e.preventDefault();
                                            
                                            return false;
                                        }

                                        fields[id] = e.target.checked;

                                        if(e.target.checked) {
                                            countChecked++;
                                        } else {
                                            countChecked--;
                                        }

                                        updateValue();
                                    }).prop('checked', fields[id]);

                                    updateValue();
                                });
                            }
                        }).attr({'data-loading': false});
                    };
        
                    renderSvgIcons();
                });
            </script>
        
            <apex:outputPanel rendered="{!!isMasterRestore}">
                <script>
                    $(function() {
                        addObjectListOptions({!relatedJSON});
                    });
                </script>
            </apex:outputPanel>
        
            <apex:outputPanel id="fieldListOutput">
                <script>
                    $(function() {
                        renderFieldListSelector({!fieldsJSON});
                    });
                </script>
            </apex:outputPanel>
        </apex:form>
    </div>
</apex:page>